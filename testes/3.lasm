;function tail(x, accum)
;   if x == 0 then return accum end
;   return tail(x - 1, x * accum)
;end
;
;function fact(x)
;   return tail(x, 1)
;end
;
;g = fact(3)

;main <x.lua:0,0> (9 instructions, 36 bytes at 0x55a85c67f870)
;0+ params, 2 slots, 0 upvalues, 0 locals, 4 constants, 2 functions
FUNC main {
    K "tail"
    K "fact"
    K "g"
    K 3

    CLOSURE  	0 0	; 0x55a85c67fa50
    SETGLOBAL	0 -1	; tail
    CLOSURE  	0 1	; 0x55a85c6803c0
    SETGLOBAL	0 -2	; fact
    GETGLOBAL	0 -2	; fact
    LOADK    	1 -4	; 3
    CALL     	0 2 2
    SETGLOBAL	0 -3	; g
    RETURN   	0 1
}

;function <x.lua:1,4> (9 instructions, 36 bytes at 0x55a85c67fa50)
;2 params, 5 slots, 0 upvalues, 2 locals, 3 constants, 0 functions
FUNC tail {
    P 2
    R 5
    K 0
    K "tail"
    K 1

    EQ       	0 0 -1	; - 0
    JMP      	1	; to 4
    RETURN   	1 2
    GETGLOBAL	2 -2	; tail
    SUB      	3 0 -3	; - 1
    MUL      	4 0 1
    TAILCALL 	2 3 0
    RETURN   	2 0
    RETURN   	0 1
}

;function <x.lua:6,8> (6 instructions, 24 bytes at 0x55a85c6803c0)
;1 param, 4 slots, 0 upvalues, 1 local, 2 constants, 0 functions
FUNC fact {
    P 1
    R 4
    K "tail"
    K 1

    GETGLOBAL	1 -1	; tail
    MOVE     	2 0
    LOADK    	3 -2	; 1
    TAILCALL 	1 3 0
    RETURN   	1 0
    RETURN   	0 1
}
